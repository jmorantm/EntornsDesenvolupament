{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inici","text":""},{"location":"#ed-entorns-de-desenvolupament","title":"ED \u2014 Entorns de Desenvolupament","text":"<p>Benvinguts als apunts del m\u00f2dul Entorns de Desenvolupament (DAM / DAW).</p> <p>En aquest lloc trobareu els apunts i pr\u00e0ctiques ordenats per Unitats Did\u00e0ctiques: - UD1: Desenvolupament de programari - UD2: Introducci\u00f3 a Git - UD3: Diagrama de classes UML - UD4: Git avan\u00e7at - UD5: Prova de programari - UD6: Diagrames UML - UD7: Estrat\u00e8gies de ramificaci\u00f3 - UD8: Proves de programari d'una arquitectura</p> <p>Aquest material est\u00e0 basat en els apunts docents i adaptat per a la web.</p>"},{"location":"ud1-desenvolupament/","title":"UD1","text":""},{"location":"ud1-desenvolupament/#ud1-desenvolupament-de-programari","title":"UD1 \u2014 Desenvolupament de programari","text":""},{"location":"ud1-desenvolupament/#objectius","title":"Objectius","text":"<ul> <li>Comprendre el desenvolupament de programari i tipus de software.</li> <li>Con\u00e8ixer el cicle de vida: an\u00e0lisi, disseny, codificaci\u00f3, proves, manteniment.</li> <li>Identificar models de proc\u00e9s (cascada, V, espiral, prototips, \u00e0gils).</li> </ul>"},{"location":"ud1-desenvolupament/#tipus-de-software","title":"Tipus de software","text":"<ul> <li>De sistema: OS, drivers.</li> <li>D'aplicaci\u00f3: navegadors, suites.</li> <li>De desenvolupament: IDEs, compiladors, int\u00e8rprets.</li> </ul>"},{"location":"ud1-desenvolupament/#cicle-de-vida-resum","title":"Cicle de vida (resum)","text":"<ol> <li>An\u00e0lisi \u2014 especificaci\u00f3 de requisits.</li> <li>Disseny \u2014 arquitectura, dades, interf\u00edcies.</li> <li>Codificaci\u00f3 \u2014 codi font, objectes, compilaci\u00f3/interpretaci\u00f3.</li> <li>Proves \u2014 unit\u00e0ries, integraci\u00f3, sistema.</li> <li>Manteniment \u2014 correctiu, perfectiu, evolutiu, adaptatiu.</li> </ol>"},{"location":"ud1-desenvolupament/#models-de-desenvolupament","title":"Models de desenvolupament","text":"<ul> <li>Cascada: seq\u00fcencial, poc flexible.</li> <li>Model en V: verifica fases amb proves.</li> <li>Prototips: r\u00e0pid o evolutiu per validar requisits.</li> <li>Espiral: iteratiu, gesti\u00f3 de riscos.</li> <li>\u00c0gils (Scrum, Kanban): iteracions curtes, feedback continu.</li> </ul>"},{"location":"ud1-desenvolupament/#recursos-exercicis","title":"Recursos / exercicis","text":"<ul> <li>Exercicis de preparaci\u00f3 d'entorn i debugging.</li> </ul>"},{"location":"ud2-introduccio-git/","title":"UD2","text":""},{"location":"ud2-introduccio-git/#ud2-introduccio-a-git","title":"UD2 \u2014 Introducci\u00f3 a Git","text":""},{"location":"ud2-introduccio-git/#objectius","title":"Objectius","text":"<ul> <li>Entendre control de versions distribu\u00eft.</li> <li>Aprendre el flux b\u00e0sic: init, add, commit, push, pull, branch, merge.</li> </ul>"},{"location":"ud2-introduccio-git/#conceptes-basics","title":"Conceptes b\u00e0sics","text":"<ul> <li>Repository (repo), commit, branch, remote.</li> <li>Estructura: <code>.git/</code>, <code>HEAD</code>, refs.</li> </ul>"},{"location":"ud2-introduccio-git/#comandes-basiques","title":"Comandes b\u00e0siques","text":"<pre><code>git init\ngit clone &lt;url&gt;\ngit add .\ngit commit -m \"Missatge\"\ngit push origin main\ngit pull origin main\n</code></pre>"},{"location":"ud3-diagrama-classes/","title":"UD3","text":""},{"location":"ud3-diagrama-classes/#ud3-diagrama-de-classes-uml","title":"UD3 \u2014 Diagrama de classes UML","text":""},{"location":"ud3-diagrama-classes/#objectius","title":"Objectius","text":"<ul> <li>Comprendre classes, atributs, m\u00e8todes i relacions.</li> <li>Dibuixar diagrames de classes per modelar sistemes.</li> </ul>"},{"location":"ud3-diagrama-classes/#elements","title":"Elements","text":"<ul> <li>Classe: nom, atributs, operacions.</li> <li>Relacions:</li> <li>Her\u00e8ncia (Generalitzaci\u00f3)</li> <li>Associaci\u00f3</li> <li>Agregaci\u00f3</li> <li>Composici\u00f3</li> <li>Depend\u00e8ncia</li> </ul>"},{"location":"ud3-diagrama-classes/#exemples","title":"Exemples","text":"<ul> <li>Persona {nom, edat} \u2014&gt; Estudiant : her\u00e8ncia</li> <li>Botiga -&gt; Producte : associaci\u00f3</li> </ul>"},{"location":"ud3-diagrama-classes/#exercicis","title":"Exercicis","text":"<ul> <li>Modelar una petita botiga online (classes: Producte, Client, Cistella, Comanda).</li> </ul>"},{"location":"ud4-git-avancat/","title":"UD4","text":""},{"location":"ud4-git-avancat/#ud4-git-avancat","title":"UD4 \u2014 Git avan\u00e7at","text":""},{"location":"ud4-git-avancat/#objectius","title":"Objectius","text":"<ul> <li>Aprendre rebase, stash, cherry-pick i resoluci\u00f3 de conflictes.</li> </ul>"},{"location":"ud4-git-avancat/#comandes-i-us","title":"Comandes i \u00fas","text":"<ul> <li><code>git stash</code> \u2192 guardar canvis temporals.</li> <li><code>git rebase branch</code> \u2192 re-aplicar commits sobre una branca.</li> <li><code>git cherry-pick &lt;sha&gt;</code> \u2192 aplicar un commit concret.</li> <li><code>git revert &lt;sha&gt;</code> \u2192 desfer publicament un commit.</li> </ul>"},{"location":"ud4-git-avancat/#estrategies","title":"Estrat\u00e8gies","text":"<ul> <li>Rebase per netejar l'historial abans d'un merge.</li> <li>Merge per conservar historial complet.</li> </ul>"},{"location":"ud5-prova-programari/","title":"UD5","text":""},{"location":"ud5-prova-programari/#ud5-prova-de-programari","title":"UD5 \u2014 Prova de programari","text":""},{"location":"ud5-prova-programari/#objectius","title":"Objectius","text":"<ul> <li>Con\u00e8ixer tipus de proves i estrat\u00e8gies de testing.</li> </ul>"},{"location":"ud5-prova-programari/#tipus-de-proves","title":"Tipus de proves","text":"<ul> <li>Unit\u00e0ries: provar funcions/m\u00e8todes (JUnit, pytest).</li> <li>Integraci\u00f3: m\u00f2duls combinats.</li> <li>Sistema: aplicaci\u00f3 completa.</li> <li>Acceptaci\u00f3: verificaci\u00f3 amb el client.</li> </ul>"},{"location":"ud5-prova-programari/#metodologies","title":"Metodologies","text":"<ul> <li>TDD (Test Driven Development).</li> <li>Proves parametritzades, mocks i fixtures.</li> </ul>"},{"location":"ud5-prova-programari/#eines","title":"Eines","text":"<ul> <li>JUnit (Java), pytest (Python), Selenium (UI).</li> </ul>"},{"location":"ud6-diagrames-uml/","title":"UD6","text":""},{"location":"ud6-diagrames-uml/#ud6-diagrames-uml-altres-tipus","title":"UD6 \u2014 Diagrames UML (altres tipus)","text":""},{"location":"ud6-diagrames-uml/#objectius","title":"Objectius","text":"<ul> <li>Ampliar coneixements en diagrames UML: usos, seq\u00fc\u00e8ncia, activitat, components.</li> </ul>"},{"location":"ud6-diagrames-uml/#tipus","title":"Tipus","text":"<ul> <li>Cas d'\u00fas: actors i escenaris.</li> <li>Seq\u00fc\u00e8ncia: missatges entre objectes en el temps.</li> <li>Activitat: flux d'activitat i processos.</li> <li>Components / Deploy: arquitectura f\u00edsica i components.</li> </ul>"},{"location":"ud6-diagrames-uml/#exemples-i-casos-dus","title":"Exemples i casos d'\u00fas","text":"<ul> <li>Diagrama de seq\u00fc\u00e8ncia per un proc\u00e9s de compra.</li> </ul>"},{"location":"ud7-ramificacio/","title":"UD7","text":""},{"location":"ud7-ramificacio/#ud7-estrategies-de-ramificacio","title":"UD7 \u2014 Estrat\u00e8gies de ramificaci\u00f3","text":""},{"location":"ud7-ramificacio/#objectius","title":"Objectius","text":"<ul> <li>Aplicar una estrat\u00e8gia per a equips i versions.</li> </ul>"},{"location":"ud7-ramificacio/#estrategies-conegudes","title":"Estrat\u00e8gies conegudes","text":"<ul> <li>Git Flow: main, develop, feature, release, hotfix.</li> <li>GitHub Flow: main + branches de feature + PR.</li> <li>Trunk-based Development: commits freq\u00fcents al main amb feature toggles.</li> </ul>"},{"location":"ud7-ramificacio/#bones-practiques","title":"Bones pr\u00e0ctiques","text":"<ul> <li>Fer pull requests i revisions de codi.</li> <li>Tests automatitzats en CI abans de merge.</li> </ul>"},{"location":"ud8-proves-arquitectura/","title":"UD8","text":""},{"location":"ud8-proves-arquitectura/#ud8-proves-de-programari-en-una-arquitectura","title":"UD8 \u2014 Proves de programari en una arquitectura","text":""},{"location":"ud8-proves-arquitectura/#objectius","title":"Objectius","text":"<ul> <li>Aplicar proves a nivell d'arquitectura: components, integracions i rendiment.</li> </ul>"},{"location":"ud8-proves-arquitectura/#tipus-de-proves-arquitecturals","title":"Tipus de proves arquitecturals","text":"<ul> <li>Proves de components: unitats en el context arquitectural.</li> <li>Proves d'integraci\u00f3 arquitectural: serveis i APIs.</li> <li>Proves de rendiment / c\u00e0rrega: JMeter, Gatling.</li> <li>Proves de seguretat: scans i pentesting b\u00e0sic.</li> </ul>"},{"location":"ud8-proves-arquitectura/#estrategia","title":"Estrat\u00e8gia","text":"<ul> <li>Definir entorns (dev / staging / prod).</li> <li>Automatitzar amb CI/CD (pipelines que executen tests).</li> </ul>"}]}