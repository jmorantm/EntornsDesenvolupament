{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ED \u2014 Entorns de Desenvolupament \u00b6 Benvinguts als apunts del m\u00f2dul Entorns de Desenvolupament (DAM / DAW). En aquest lloc trobareu els apunts i pr\u00e0ctiques ordenats per Unitats Did\u00e0ctiques: - UD1: Desenvolupament de programari - UD2: Introducci\u00f3 a Git - UD3: Diagrama de classes UML - UD4: Git avan\u00e7at - UD5: Prova de programari - UD6: Diagrames UML - UD7: Estrat\u00e8gies de ramificaci\u00f3 - UD8: Proves de programari d'una arquitectura Aquest material est\u00e0 basat en els apunts docents i adaptat per a la web.","title":"Inici"},{"location":"#ed-entorns-de-desenvolupament","text":"Benvinguts als apunts del m\u00f2dul Entorns de Desenvolupament (DAM / DAW). En aquest lloc trobareu els apunts i pr\u00e0ctiques ordenats per Unitats Did\u00e0ctiques: - UD1: Desenvolupament de programari - UD2: Introducci\u00f3 a Git - UD3: Diagrama de classes UML - UD4: Git avan\u00e7at - UD5: Prova de programari - UD6: Diagrames UML - UD7: Estrat\u00e8gies de ramificaci\u00f3 - UD8: Proves de programari d'una arquitectura Aquest material est\u00e0 basat en els apunts docents i adaptat per a la web.","title":"ED \u2014 Entorns de Desenvolupament"},{"location":"ud1-desenvolupament/","text":"UD1 \u2014 Desenvolupament de programari \u00b6 Objectius \u00b6 Comprendre el desenvolupament de programari i tipus de software. Con\u00e8ixer el cicle de vida: an\u00e0lisi, disseny, codificaci\u00f3, proves, manteniment. Identificar models de proc\u00e9s (cascada, V, espiral, prototips, \u00e0gils). Tipus de software \u00b6 De sistema : OS, drivers. D'aplicaci\u00f3 : navegadors, suites. De desenvolupament : IDEs, compiladors, int\u00e8rprets. Cicle de vida (resum) \u00b6 An\u00e0lisi \u2014 especificaci\u00f3 de requisits. Disseny \u2014 arquitectura, dades, interf\u00edcies. Codificaci\u00f3 \u2014 codi font, objectes, compilaci\u00f3/interpretaci\u00f3. Proves \u2014 unit\u00e0ries, integraci\u00f3, sistema. Manteniment \u2014 correctiu, perfectiu, evolutiu, adaptatiu. Models de desenvolupament \u00b6 Cascada : seq\u00fcencial, poc flexible. Model en V : verifica fases amb proves. Prototips : r\u00e0pid o evolutiu per validar requisits. Espiral : iteratiu, gesti\u00f3 de riscos. \u00c0gils (Scrum, Kanban) : iteracions curtes, feedback continu. Recursos / exercicis \u00b6 Exercicis de preparaci\u00f3 d'entorn i debugging.","title":"UD1"},{"location":"ud1-desenvolupament/#ud1-desenvolupament-de-programari","text":"","title":"UD1 \u2014 Desenvolupament de programari"},{"location":"ud1-desenvolupament/#objectius","text":"Comprendre el desenvolupament de programari i tipus de software. Con\u00e8ixer el cicle de vida: an\u00e0lisi, disseny, codificaci\u00f3, proves, manteniment. Identificar models de proc\u00e9s (cascada, V, espiral, prototips, \u00e0gils).","title":"Objectius"},{"location":"ud1-desenvolupament/#tipus-de-software","text":"De sistema : OS, drivers. D'aplicaci\u00f3 : navegadors, suites. De desenvolupament : IDEs, compiladors, int\u00e8rprets.","title":"Tipus de software"},{"location":"ud1-desenvolupament/#cicle-de-vida-resum","text":"An\u00e0lisi \u2014 especificaci\u00f3 de requisits. Disseny \u2014 arquitectura, dades, interf\u00edcies. Codificaci\u00f3 \u2014 codi font, objectes, compilaci\u00f3/interpretaci\u00f3. Proves \u2014 unit\u00e0ries, integraci\u00f3, sistema. Manteniment \u2014 correctiu, perfectiu, evolutiu, adaptatiu.","title":"Cicle de vida (resum)"},{"location":"ud1-desenvolupament/#models-de-desenvolupament","text":"Cascada : seq\u00fcencial, poc flexible. Model en V : verifica fases amb proves. Prototips : r\u00e0pid o evolutiu per validar requisits. Espiral : iteratiu, gesti\u00f3 de riscos. \u00c0gils (Scrum, Kanban) : iteracions curtes, feedback continu.","title":"Models de desenvolupament"},{"location":"ud1-desenvolupament/#recursos-exercicis","text":"Exercicis de preparaci\u00f3 d'entorn i debugging.","title":"Recursos / exercicis"},{"location":"ud2-introduccio-git/","text":"UD2 \u2014 Introducci\u00f3 a Git \u00b6 Objectius \u00b6 Entendre control de versions distribu\u00eft. Aprendre el flux b\u00e0sic: init, add, commit, push, pull, branch, merge. Conceptes b\u00e0sics \u00b6 Repository (repo) , commit , branch , remote . Estructura: .git/ , HEAD , refs. Comandes b\u00e0siques \u00b6 ```bash git init git clone git add . git commit -m \"Missatge\" git push origin main git pull origin main","title":"UD2"},{"location":"ud2-introduccio-git/#ud2-introduccio-a-git","text":"","title":"UD2 \u2014 Introducci\u00f3 a Git"},{"location":"ud2-introduccio-git/#objectius","text":"Entendre control de versions distribu\u00eft. Aprendre el flux b\u00e0sic: init, add, commit, push, pull, branch, merge.","title":"Objectius"},{"location":"ud2-introduccio-git/#conceptes-basics","text":"Repository (repo) , commit , branch , remote . Estructura: .git/ , HEAD , refs.","title":"Conceptes b\u00e0sics"},{"location":"ud2-introduccio-git/#comandes-basiques","text":"```bash git init git clone git add . git commit -m \"Missatge\" git push origin main git pull origin main","title":"Comandes b\u00e0siques"},{"location":"ud3-diagrama-classes/","text":"ud3-diagrama-classes.md \u00b6 ```markdown UD3 \u2014 Diagrama de classes UML \u00b6 Objectius \u00b6 Comprendre classes, atributs, m\u00e8todes i relacions. Dibuixar diagrames de classes per modelar sistemes. Elements \u00b6 Classe : nom, atributs, operacions. Relacions : Her\u00e8ncia (Generalitzaci\u00f3) Associaci\u00f3 Agregaci\u00f3 Composici\u00f3 Depend\u00e8ncia Exemples \u00b6 Persona {nom, edat} \u2014> Estudiant : her\u00e8ncia Botiga -> Producte : associaci\u00f3 Exercicis \u00b6 Modelar una petita botiga online (classes: Producte, Client, Cistella, Comanda).","title":"UD3"},{"location":"ud3-diagrama-classes/#ud3-diagrama-classesmd","text":"```markdown","title":"ud3-diagrama-classes.md"},{"location":"ud3-diagrama-classes/#ud3-diagrama-de-classes-uml","text":"","title":"UD3 \u2014 Diagrama de classes UML"},{"location":"ud3-diagrama-classes/#objectius","text":"Comprendre classes, atributs, m\u00e8todes i relacions. Dibuixar diagrames de classes per modelar sistemes.","title":"Objectius"},{"location":"ud3-diagrama-classes/#elements","text":"Classe : nom, atributs, operacions. Relacions : Her\u00e8ncia (Generalitzaci\u00f3) Associaci\u00f3 Agregaci\u00f3 Composici\u00f3 Depend\u00e8ncia","title":"Elements"},{"location":"ud3-diagrama-classes/#exemples","text":"Persona {nom, edat} \u2014> Estudiant : her\u00e8ncia Botiga -> Producte : associaci\u00f3","title":"Exemples"},{"location":"ud3-diagrama-classes/#exercicis","text":"Modelar una petita botiga online (classes: Producte, Client, Cistella, Comanda).","title":"Exercicis"},{"location":"ud4-git-avancat/","text":"UD4 \u2014 Git avan\u00e7at \u00b6 Objectius \u00b6 Aprendre rebase, stash, cherry-pick i resoluci\u00f3 de conflictes. Comandes i \u00fas \u00b6 git stash \u2192 guardar canvis temporals. git rebase branch \u2192 re-aplicar commits sobre una branca. git cherry-pick <sha> \u2192 aplicar un commit concret. git revert <sha> \u2192 desfer publicament un commit. Estrat\u00e8gies \u00b6 Rebase per netejar l'historial abans d'un merge. Merge per conservar historial complet.","title":"UD4"},{"location":"ud4-git-avancat/#ud4-git-avancat","text":"","title":"UD4 \u2014 Git avan\u00e7at"},{"location":"ud4-git-avancat/#objectius","text":"Aprendre rebase, stash, cherry-pick i resoluci\u00f3 de conflictes.","title":"Objectius"},{"location":"ud4-git-avancat/#comandes-i-us","text":"git stash \u2192 guardar canvis temporals. git rebase branch \u2192 re-aplicar commits sobre una branca. git cherry-pick <sha> \u2192 aplicar un commit concret. git revert <sha> \u2192 desfer publicament un commit.","title":"Comandes i \u00fas"},{"location":"ud4-git-avancat/#estrategies","text":"Rebase per netejar l'historial abans d'un merge. Merge per conservar historial complet.","title":"Estrat\u00e8gies"},{"location":"ud5-prova-programari/","text":"UD5 \u2014 Prova de programari \u00b6 Objectius \u00b6 Con\u00e8ixer tipus de proves i estrat\u00e8gies de testing. Tipus de proves \u00b6 Unit\u00e0ries : provar funcions/m\u00e8todes (JUnit, pytest). Integraci\u00f3 : m\u00f2duls combinats. Sistema : aplicaci\u00f3 completa. Acceptaci\u00f3 : verificaci\u00f3 amb el client. Metodologies \u00b6 TDD (Test Driven Development). Proves parametritzades, mocks i fixtures. Eines \u00b6 JUnit (Java), pytest (Python), Selenium (UI).","title":"UD5"},{"location":"ud5-prova-programari/#ud5-prova-de-programari","text":"","title":"UD5 \u2014 Prova de programari"},{"location":"ud5-prova-programari/#objectius","text":"Con\u00e8ixer tipus de proves i estrat\u00e8gies de testing.","title":"Objectius"},{"location":"ud5-prova-programari/#tipus-de-proves","text":"Unit\u00e0ries : provar funcions/m\u00e8todes (JUnit, pytest). Integraci\u00f3 : m\u00f2duls combinats. Sistema : aplicaci\u00f3 completa. Acceptaci\u00f3 : verificaci\u00f3 amb el client.","title":"Tipus de proves"},{"location":"ud5-prova-programari/#metodologies","text":"TDD (Test Driven Development). Proves parametritzades, mocks i fixtures.","title":"Metodologies"},{"location":"ud5-prova-programari/#eines","text":"JUnit (Java), pytest (Python), Selenium (UI).","title":"Eines"},{"location":"ud6-diagrames-uml/","text":"UD6 \u2014 Diagrames UML (altres tipus) \u00b6 Objectius \u00b6 Ampliar coneixements en diagrames UML: usos, seq\u00fc\u00e8ncia, activitat, components. Tipus \u00b6 Cas d'\u00fas : actors i escenaris. Seq\u00fc\u00e8ncia : missatges entre objectes en el temps. Activitat : flux d'activitat i processos. Components / Deploy : arquitectura f\u00edsica i components. Exemples i casos d'\u00fas \u00b6 Diagrama de seq\u00fc\u00e8ncia per un proc\u00e9s de compra.","title":"UD6"},{"location":"ud6-diagrames-uml/#ud6-diagrames-uml-altres-tipus","text":"","title":"UD6 \u2014 Diagrames UML (altres tipus)"},{"location":"ud6-diagrames-uml/#objectius","text":"Ampliar coneixements en diagrames UML: usos, seq\u00fc\u00e8ncia, activitat, components.","title":"Objectius"},{"location":"ud6-diagrames-uml/#tipus","text":"Cas d'\u00fas : actors i escenaris. Seq\u00fc\u00e8ncia : missatges entre objectes en el temps. Activitat : flux d'activitat i processos. Components / Deploy : arquitectura f\u00edsica i components.","title":"Tipus"},{"location":"ud6-diagrames-uml/#exemples-i-casos-dus","text":"Diagrama de seq\u00fc\u00e8ncia per un proc\u00e9s de compra.","title":"Exemples i casos d'\u00fas"},{"location":"ud7-ramificacio/","text":"UD7 \u2014 Estrat\u00e8gies de ramificaci\u00f3 \u00b6 Objectius \u00b6 Aplicar una estrat\u00e8gia per a equips i versions. Estrat\u00e8gies conegudes \u00b6 Git Flow : main, develop, feature, release, hotfix. GitHub Flow : main + branches de feature + PR. Trunk-based Development : commits freq\u00fcents al main amb feature toggles. Bones pr\u00e0ctiques \u00b6 Fer pull requests i revisions de codi. Tests automatitzats en CI abans de merge.","title":"UD7"},{"location":"ud7-ramificacio/#ud7-estrategies-de-ramificacio","text":"","title":"UD7 \u2014 Estrat\u00e8gies de ramificaci\u00f3"},{"location":"ud7-ramificacio/#objectius","text":"Aplicar una estrat\u00e8gia per a equips i versions.","title":"Objectius"},{"location":"ud7-ramificacio/#estrategies-conegudes","text":"Git Flow : main, develop, feature, release, hotfix. GitHub Flow : main + branches de feature + PR. Trunk-based Development : commits freq\u00fcents al main amb feature toggles.","title":"Estrat\u00e8gies conegudes"},{"location":"ud7-ramificacio/#bones-practiques","text":"Fer pull requests i revisions de codi. Tests automatitzats en CI abans de merge.","title":"Bones pr\u00e0ctiques"},{"location":"ud8-proves-arquitectura/","text":"UD8 \u2014 Proves de programari en una arquitectura \u00b6 Objectius \u00b6 Aplicar proves a nivell d'arquitectura: components, integracions i rendiment. Tipus de proves arquitecturals \u00b6 Proves de components : unitats en el context arquitectural. Proves d'integraci\u00f3 arquitectural : serveis i APIs. Proves de rendiment / c\u00e0rrega : JMeter, Gatling. Proves de seguretat : scans i pentesting b\u00e0sic. Estrat\u00e8gia \u00b6 Definir entorns (dev / staging / prod). Automatitzar amb CI/CD (pipelines que executen tests).","title":"UD8"},{"location":"ud8-proves-arquitectura/#ud8-proves-de-programari-en-una-arquitectura","text":"","title":"UD8 \u2014 Proves de programari en una arquitectura"},{"location":"ud8-proves-arquitectura/#objectius","text":"Aplicar proves a nivell d'arquitectura: components, integracions i rendiment.","title":"Objectius"},{"location":"ud8-proves-arquitectura/#tipus-de-proves-arquitecturals","text":"Proves de components : unitats en el context arquitectural. Proves d'integraci\u00f3 arquitectural : serveis i APIs. Proves de rendiment / c\u00e0rrega : JMeter, Gatling. Proves de seguretat : scans i pentesting b\u00e0sic.","title":"Tipus de proves arquitecturals"},{"location":"ud8-proves-arquitectura/#estrategia","text":"Definir entorns (dev / staging / prod). Automatitzar amb CI/CD (pipelines que executen tests).","title":"Estrat\u00e8gia"}]}